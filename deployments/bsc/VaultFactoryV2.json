{
  "address": "0x2A990a5CbA595BD80BD46E484446f0a7998108DC",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_routerRepository",
          "type": "address"
        }
      ],
      "name": "RouterRepositorySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "VaultCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_vaultMaster",
          "type": "address"
        }
      ],
      "name": "VaultMasterCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_vaultMaster",
          "type": "address"
        }
      ],
      "name": "VaultMasterRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_code",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_initArguments",
          "type": "bytes"
        }
      ],
      "name": "addTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_templateId",
          "type": "uint256"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createVaultMaster",
      "outputs": [
        {
          "internalType": "address",
          "name": "_vaultMaster",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserVaultMaster",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_routerRepository",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tid",
          "type": "uint256"
        }
      ],
      "name": "removeTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeVaultMaster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "routerRepository",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_routerRepository",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_code",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_initArguments",
          "type": "bytes"
        }
      ],
      "name": "updateVaultMasterTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userVaultMasters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vaultTemplates",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "code",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "arguments",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "deprecated",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x78d42293a551a304d23527a44b6fa5b529f7e6cb2b315c61266b1ba99f084904",
  "receipt": {
    "to": null,
    "from": "0x9bDff3424c7D293793541704238F2a93F2Ae0FD7",
    "contractAddress": "0x2A990a5CbA595BD80BD46E484446f0a7998108DC",
    "transactionIndex": 72,
    "gasUsed": "1227128",
    "logsBloom": "0x
    "blockHash": "0x73dd71fe5be62883acf23cfe29e948437415073e25b1e8549a5601e403c5f546",
    "transactionHash": "0x78d42293a551a304d23527a44b6fa5b529f7e6cb2b315c61266b1ba99f084904",
    "logs": [
      {
        "transactionIndex": 72,
        "blockNumber": 8536627,
        "transactionHash": "0x78d42293a551a304d23527a44b6fa5b529f7e6cb2b315c61266b1ba99f084904",
        "address": "0x2A990a5CbA595BD80BD46E484446f0a7998108DC",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009bdff3424c7d293793541704238f2a93f2ae0fd7"
        ],
        "data": "0x",
        "logIndex": 308,
        "blockHash": "0x73dd71fe5be62883acf23cfe29e948437415073e25b1e8549a5601e403c5f546"
      }
    ],
    "blockNumber": 8536627,
    "cumulativeGasUsed": "15055757",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "a8b89f91c018cce1e6781c8ed4815991",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_routerRepository\",\"type\":\"address\"}],\"name\":\"RouterRepositorySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"VaultCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_vaultMaster\",\"type\":\"address\"}],\"name\":\"VaultMasterCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_vaultMaster\",\"type\":\"address\"}],\"name\":\"VaultMasterRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_initArguments\",\"type\":\"bytes\"}],\"name\":\"addTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_templateId\",\"type\":\"uint256\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createVaultMaster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_vaultMaster\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserVaultMaster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_routerRepository\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tid\",\"type\":\"uint256\"}],\"name\":\"removeTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeVaultMaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"routerRepository\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_routerRepository\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_initArguments\",\"type\":\"bytes\"}],\"name\":\"updateVaultMasterTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userVaultMasters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vaultTemplates\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"arguments\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"deprecated\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VaultFactoryV2.sol\":\"VaultFactoryV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/VaultFactoryV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"./interfaces/IVaultMaster.sol\\\";\\nimport \\\"./interfaces/IVaultV2.sol\\\";\\n\\ncontract VaultFactoryV2 is Ownable, Initializable {\\n    struct VaultTemplate {\\n        bytes code;\\n        bytes arguments;\\n        bool deprecated;\\n    }\\n\\n    struct VaultMasterTemplate {\\n        bytes code;\\n        bytes arguments;\\n    }\\n\\n    VaultTemplate[] public vaultTemplates;\\n    VaultMasterTemplate private vaultMasterTemplate;\\n    mapping(address => address) public userVaultMasters;\\n\\n    address public routerRepository;\\n\\n    // EVENTS\\n    event RouterRepositorySet(address _routerRepository);\\n    event VaultCreated(address indexed _owner, address _vault);\\n    event VaultMasterCreated(address indexed _owner, address _vaultMaster);\\n    event VaultMasterRemoved(address indexed _owner, address _vaultMaster);\\n\\n    // ========= INITIALIZER =========\\n    function initialize(address _routerRepository) external onlyOwner initializer {\\n        routerRepository = _routerRepository;\\n    }\\n\\n    // ========= PUBLIC FUNCTIONS =========\\n    function getUserVaultMaster(address _user) external view returns (address) {\\n        return userVaultMasters[_user];\\n    }\\n\\n    function createVault(uint256 _templateId) external returns (address _vault) {\\n        address _vaultMaster = userVaultMasters[msg.sender];\\n        require(_vaultMaster != address(0), \\\"Vault master not existed\\\");\\n\\n        VaultTemplate storage _template = vaultTemplates[_templateId];\\n        bytes memory bytecode = _template.code;\\n        require(bytecode.length != 0, \\\"vault is not supported\\\");\\n        bytes memory arguments = _template.arguments;\\n        require(arguments.length != 0, \\\"invalid vault arguments\\\");\\n\\n        bytecode = abi.encodePacked(bytecode, arguments);\\n        bytes32 salt = keccak256(abi.encodePacked(msg.sender, arguments, block.number));\\n\\n        // solhint-disable no-inline-assembly\\n        assembly {\\n            _vault := create2(0, add(bytecode, 0x20), mload(bytecode), salt)\\n            if iszero(extcodesize(_vault)) {\\n                revert(0, 0)\\n            }\\n        }\\n\\n        IVaultV2(_vault).initialize(_templateId, msg.sender, _vaultMaster);\\n        IVaultMaster(_vaultMaster).addVault(_vault);\\n        emit VaultCreated(msg.sender, _vault);\\n    }\\n\\n    function createVaultMaster() external returns (address _vaultMaster) {\\n        require(userVaultMasters[msg.sender] == address(0), \\\"Vault master existed\\\");\\n\\n        bytes memory bytecode = vaultMasterTemplate.code;\\n        require(bytecode.length != 0, \\\"vault master is not supported\\\");\\n        bytes memory arguments = vaultMasterTemplate.arguments;\\n\\n        bytecode = abi.encodePacked(bytecode, arguments);\\n        bytes32 salt = keccak256(abi.encodePacked(msg.sender, arguments, block.number));\\n\\n        // solhint-disable no-inline-assembly\\n        assembly {\\n            _vaultMaster := create2(0, add(bytecode, 0x20), mload(bytecode), salt)\\n            if iszero(extcodesize(_vaultMaster)) {\\n                revert(0, 0)\\n            }\\n        }\\n\\n        IVaultMaster(_vaultMaster).initialize(msg.sender, routerRepository);\\n        userVaultMasters[msg.sender] = _vaultMaster;\\n        emit VaultMasterCreated(msg.sender, _vaultMaster);\\n    }\\n\\n    function removeVaultMaster() external {\\n        address vaultAddress = userVaultMasters[msg.sender];\\n        require(vaultAddress != address(0), \\\"Vault master not existed\\\");\\n        delete userVaultMasters[msg.sender];\\n        emit VaultMasterRemoved(msg.sender, vaultAddress);\\n    }\\n\\n    // ========= RESTRICTED FUNCTIONS =========\\n    function setRouter(address _routerRepository) external onlyOwner {\\n        require(routerRepository != address(0x0), \\\"emptyAddress\\\");\\n        require(routerRepository != _routerRepository, \\\"unchanged\\\");\\n        routerRepository = _routerRepository;\\n        emit RouterRepositorySet(_routerRepository);\\n    }\\n\\n    function updateVaultMasterTemplate(bytes calldata _code, bytes calldata _initArguments) external onlyOwner {\\n        vaultMasterTemplate = VaultMasterTemplate(_code, _initArguments);\\n    }\\n\\n    function addTemplate(bytes calldata _code, bytes calldata _initArguments) external onlyOwner {\\n        VaultTemplate memory _template = VaultTemplate(_code, _initArguments, false);\\n        vaultTemplates.push(_template);\\n    }\\n\\n    function removeTemplate(uint256 tid) external onlyOwner {\\n        vaultTemplates[tid] = VaultTemplate(\\\"\\\", \\\"\\\", true);\\n    }\\n}\\n\",\"keccak256\":\"0x403e5017b1076e8f2b5bb588755d944a1828df5a4b4bbb543ffe04b96e939239\",\"license\":\"MIT\"},\"contracts/interfaces/IVaultMaster.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\ninterface IVaultMaster {\\n    function owner() external view returns (address);\\n\\n    function initialize(address _owner, address _routeRepository) external;\\n\\n    function addVault(address _vaultAddress) external;\\n\\n    function removeVault(address _vaultAddress) external;\\n}\\n\",\"keccak256\":\"0x15bfbb02c4238ea0dc6cb54d6f21507608b7abb939502b21b9faf03037423d80\",\"license\":\"MIT\"},\"contracts/interfaces/IVaultV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.4;\\n\\nimport \\\"./IVaultMaster.sol\\\";\\n\\ninterface IVaultV2 {\\n    function initialize(\\n        uint256 _vaultTemplateId,\\n        address _owner,\\n        address _vaultMaster\\n    ) external;\\n\\n    function vaultMaster() external view returns (IVaultMaster);\\n\\n    function liquidityRouter() external view returns (address);\\n\\n    function isSingleStaking() external view returns (bool);\\n\\n    function vaultTemplateId() external view returns (uint256);\\n\\n    function rewardToken() external view returns (address);\\n\\n    function wantToken() external view returns (address);\\n\\n    function pending() external view returns (uint256);\\n\\n    function balanceInFarm() external view returns (uint256);\\n\\n    function canAbandon() external view returns (bool);\\n\\n    function deposit(uint256 _wantAmt) external;\\n\\n    function claim() external returns (uint256 _amount);\\n\\n    function exit() external returns (uint256 _withdrawnAmount, uint256 _rewardAmount);\\n\\n    function withdraw(uint256 _wantAmt) external returns (uint256 _withdrawnAmount, uint256 _rewardAmount);\\n}\\n\",\"keccak256\":\"0xc5ebe600f5e6231b8c1507dc510ca0480b552188ef1a4ec0b85836925a344f95\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506114d0806100616000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80639abbdf4b11610097578063c60c802e11610066578063c60c802e146101f7578063da705c2c1461020a578063f2fde38b14610236578063fb31c8a51461024957600080fd5b80639abbdf4b146101ab578063c04d0ab7146101be578063c0d78655146101d1578063c4d66de8146101e457600080fd5b8063641a3037116100d3578063641a303714610175578063715018a61461018a57806382f21cc4146101925780638da5cb5b1461019a57600080fd5b80630ae9ade9146100fa578063388b9d7e146101405780635248850814610162575b600080fd5b610123610108366004611279565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61015361014e366004611310565b610251565b604051610137939291906113c2565b600554610123906001600160a01b031681565b6101886101833660046112a7565b61039e565b005b610188610481565b6101886104f5565b6000546001600160a01b0316610123565b6101236101b9366004611310565b6105b3565b6101886101cc366004611310565b61097b565b6101886101df366004611279565b610a57565b6101886101f2366004611279565b610b66565b6101886102053660046112a7565b610c72565b610123610218366004611279565b6001600160a01b039081166000908152600460205260409020541690565b610188610244366004611279565b610da6565b610123610e90565b6001818154811061026157600080fd5b90600052602060002090600302016000915090508060000180546102849061145f565b80601f01602080910402602001604051908101604052809291908181526020018280546102b09061145f565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b5050505050908060010180546103129061145f565b80601f016020809104026020016040519081016040528092919081815260200182805461033e9061145f565b801561038b5780601f106103605761010080835404028352916020019161038b565b820191906000526020600020905b81548152906001019060200180831161036e57829003601f168201915b5050506002909301549192505060ff1683565b6000546001600160a01b031633146103d15760405162461bcd60e51b81526004016103c8906113fa565b60405180910390fd5b6040805160606020601f87018190040282018101835291810185815290918291908790879081908501838280828437600092019190915250505090825250604080516020601f86018190048102820181019092528481529181019190859085908190840183828082843760009201919091525050509152508051805160029161045f91839160200190611199565b5060208281015180516104789260018501920190611199565b50505050505050565b6000546001600160a01b031633146104ab5760405162461bcd60e51b81526004016103c8906113fa565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b336000908152600460205260409020546001600160a01b0316806105565760405162461bcd60e51b815260206004820152601860248201527715985d5b1d081b585cdd195c881b9bdd08195e1a5cdd195960421b60448201526064016103c8565b3360008181526004602090815260409182902080546001600160a01b031916905590516001600160a01b03841681527f6a2e54b818d37c19b4d4bb315f0c460e178db89f575b1b13c1acb347b17c4a07910160405180910390a250565b336000908152600460205260408120546001600160a01b0316806106145760405162461bcd60e51b815260206004820152601860248201527715985d5b1d081b585cdd195c881b9bdd08195e1a5cdd195960421b60448201526064016103c8565b60006001848154811061063757634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201905060008160000180546106589061145f565b80601f01602080910402602001604051908101604052809291908181526020018280546106849061145f565b80156106d15780601f106106a6576101008083540402835291602001916106d1565b820191906000526020600020905b8154815290600101906020018083116106b457829003601f168201915b505050505090508051600014156107235760405162461bcd60e51b81526020600482015260166024820152751d985d5b1d081a5cc81b9bdd081cdd5c1c1bdc9d195960521b60448201526064016103c8565b60008260010180546107349061145f565b80601f01602080910402602001604051908101604052809291908181526020018280546107609061145f565b80156107ad5780601f10610782576101008083540402835291602001916107ad565b820191906000526020600020905b81548152906001019060200180831161079057829003601f168201915b505050505090508051600014156108065760405162461bcd60e51b815260206004820152601760248201527f696e76616c6964207661756c7420617267756d656e747300000000000000000060448201526064016103c8565b8181604051602001610819929190611393565b6040516020818303038152906040529150600033824360405160200161084193929190611354565b604051602081830303815290604052805190602001209050808351602085016000f59550853b61087057600080fd5b604051630b4988fd60e41b8152600481018890523360248201526001600160a01b03868116604483015287169063b4988fd090606401600060405180830381600087803b1580156108c057600080fd5b505af11580156108d4573d6000803e3d6000fd5b50506040516312b5ad0160e11b81526001600160a01b0389811660048301528816925063256b5a029150602401600060405180830381600087803b15801561091b57600080fd5b505af115801561092f573d6000803e3d6000fd5b50506040516001600160a01b03891681523392507f5d9c31ffa0fecffd7cf379989a3c7af252f0335e0d2a1320b55245912c781f53915060200160405180910390a25050505050919050565b6000546001600160a01b031633146109a55760405162461bcd60e51b81526004016103c8906113fa565b6040805160808101825260006060820181815282528251602081810185529181529082015260019181018290528154909190839081106109f557634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016000820151816000019080519060200190610a1f929190611199565b506020828101518051610a389260018501920190611199565b50604091909101516002909101805460ff191691151591909117905550565b6000546001600160a01b03163314610a815760405162461bcd60e51b81526004016103c8906113fa565b6005546001600160a01b0316610ac85760405162461bcd60e51b815260206004820152600c60248201526b656d7074794164647265737360a01b60448201526064016103c8565b6005546001600160a01b0382811691161415610b125760405162461bcd60e51b81526020600482015260096024820152681d5b98da185b99d95960ba1b60448201526064016103c8565b600580546001600160a01b0319166001600160a01b0383169081179091556040519081527f5cbd2d8f985b68b423222677a03215cddfa126e788663e1c0aaef679c5bcf2639060200160405180910390a150565b6000546001600160a01b03163314610b905760405162461bcd60e51b81526004016103c8906113fa565b600054600160a81b900460ff1680610bb25750600054600160a01b900460ff16155b610c155760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103c8565b600054600160a81b900460ff16158015610c3f576000805461ffff60a01b191661010160a01b1790555b600580546001600160a01b0319166001600160a01b0384161790558015610c6e576000805460ff60a81b191690555b5050565b6000546001600160a01b03163314610c9c5760405162461bcd60e51b81526004016103c8906113fa565b6040805160806020601f87018190040282018101909252606081018581526000928291908890889081908501838280828437600092019190915250505090825250604080516020601f87018190048102820181019092528581529181019190869086908190840183828082843760009201829052509385525050506020918201819052600180548082018255915282518051939450849360039092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192610d6a92849290910190611199565b506020828101518051610d839260018501920190611199565b50604091909101516002909101805460ff19169115159190911790555050505050565b6000546001600160a01b03163314610dd05760405162461bcd60e51b81526004016103c8906113fa565b6001600160a01b038116610e355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b336000908152600460205260408120546001600160a01b031615610eed5760405162461bcd60e51b815260206004820152601460248201527315985d5b1d081b585cdd195c88195e1a5cdd195960621b60448201526064016103c8565b600060026000018054610eff9061145f565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2b9061145f565b8015610f785780601f10610f4d57610100808354040283529160200191610f78565b820191906000526020600020905b815481529060010190602001808311610f5b57829003601f168201915b50505050509050805160001415610fd15760405162461bcd60e51b815260206004820152601d60248201527f7661756c74206d6173746572206973206e6f7420737570706f7274656400000060448201526064016103c8565b600060026001018054610fe39061145f565b80601f016020809104026020016040519081016040528092919081815260200182805461100f9061145f565b801561105c5780601f106110315761010080835404028352916020019161105c565b820191906000526020600020905b81548152906001019060200180831161103f57829003601f168201915b505050505090508181604051602001611076929190611393565b6040516020818303038152906040529150600033824360405160200161109e93929190611354565b604051602081830303815290604052805190602001209050808351602085016000f59350833b6110cd57600080fd5b60055460405163485cc95560e01b81523360048201526001600160a01b0391821660248201529085169063485cc95590604401600060405180830381600087803b15801561111a57600080fd5b505af115801561112e573d6000803e3d6000fd5b50503360008181526004602090815260409182902080546001600160a01b0319166001600160a01b038b1690811790915591519182529193507f6413b565d49b7d00d6a4f9d7af52060d79f0a408109715c16eb67bdf548a92e892500160405180910390a250505090565b8280546111a59061145f565b90600052602060002090601f0160209004810192826111c7576000855561120d565b82601f106111e057805160ff191683800117855561120d565b8280016001018555821561120d579182015b8281111561120d5782518255916020019190600101906111f2565b5061121992915061121d565b5090565b5b80821115611219576000815560010161121e565b60008083601f840112611243578182fd5b50813567ffffffffffffffff81111561125a578182fd5b60208301915083602082850101111561127257600080fd5b9250929050565b60006020828403121561128a578081fd5b81356001600160a01b03811681146112a0578182fd5b9392505050565b600080600080604085870312156112bc578283fd5b843567ffffffffffffffff808211156112d3578485fd5b6112df88838901611232565b909650945060208701359150808211156112f7578384fd5b5061130487828801611232565b95989497509550505050565b600060208284031215611321578081fd5b5035919050565b6000815180845261134081602086016020860161142f565b601f01601f19169290920160200192915050565b6bffffffffffffffffffffffff198460601b1681526000835161137e81601485016020880161142f565b60149201918201929092526034019392505050565b600083516113a581846020880161142f565b8351908301906113b981836020880161142f565b01949350505050565b6060815260006113d56060830186611328565b82810360208401526113e78186611328565b9150508215156040830152949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60005b8381101561144a578181015183820152602001611432565b83811115611459576000848401525b50505050565b600181811c9082168061147357607f821691505b6020821081141561149457634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200e9b9b883b83ead23c06cb72f94ffdac33a1f5dae916ec56d9bbe5f8f9a5a3e664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80639abbdf4b11610097578063c60c802e11610066578063c60c802e146101f7578063da705c2c1461020a578063f2fde38b14610236578063fb31c8a51461024957600080fd5b80639abbdf4b146101ab578063c04d0ab7146101be578063c0d78655146101d1578063c4d66de8146101e457600080fd5b8063641a3037116100d3578063641a303714610175578063715018a61461018a57806382f21cc4146101925780638da5cb5b1461019a57600080fd5b80630ae9ade9146100fa578063388b9d7e146101405780635248850814610162575b600080fd5b610123610108366004611279565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61015361014e366004611310565b610251565b604051610137939291906113c2565b600554610123906001600160a01b031681565b6101886101833660046112a7565b61039e565b005b610188610481565b6101886104f5565b6000546001600160a01b0316610123565b6101236101b9366004611310565b6105b3565b6101886101cc366004611310565b61097b565b6101886101df366004611279565b610a57565b6101886101f2366004611279565b610b66565b6101886102053660046112a7565b610c72565b610123610218366004611279565b6001600160a01b039081166000908152600460205260409020541690565b610188610244366004611279565b610da6565b610123610e90565b6001818154811061026157600080fd5b90600052602060002090600302016000915090508060000180546102849061145f565b80601f01602080910402602001604051908101604052809291908181526020018280546102b09061145f565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b5050505050908060010180546103129061145f565b80601f016020809104026020016040519081016040528092919081815260200182805461033e9061145f565b801561038b5780601f106103605761010080835404028352916020019161038b565b820191906000526020600020905b81548152906001019060200180831161036e57829003601f168201915b5050506002909301549192505060ff1683565b6000546001600160a01b031633146103d15760405162461bcd60e51b81526004016103c8906113fa565b60405180910390fd5b6040805160606020601f87018190040282018101835291810185815290918291908790879081908501838280828437600092019190915250505090825250604080516020601f86018190048102820181019092528481529181019190859085908190840183828082843760009201919091525050509152508051805160029161045f91839160200190611199565b5060208281015180516104789260018501920190611199565b50505050505050565b6000546001600160a01b031633146104ab5760405162461bcd60e51b81526004016103c8906113fa565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b336000908152600460205260409020546001600160a01b0316806105565760405162461bcd60e51b815260206004820152601860248201527715985d5b1d081b585cdd195c881b9bdd08195e1a5cdd195960421b60448201526064016103c8565b3360008181526004602090815260409182902080546001600160a01b031916905590516001600160a01b03841681527f6a2e54b818d37c19b4d4bb315f0c460e178db89f575b1b13c1acb347b17c4a07910160405180910390a250565b336000908152600460205260408120546001600160a01b0316806106145760405162461bcd60e51b815260206004820152601860248201527715985d5b1d081b585cdd195c881b9bdd08195e1a5cdd195960421b60448201526064016103c8565b60006001848154811061063757634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201905060008160000180546106589061145f565b80601f01602080910402602001604051908101604052809291908181526020018280546106849061145f565b80156106d15780601f106106a6576101008083540402835291602001916106d1565b820191906000526020600020905b8154815290600101906020018083116106b457829003601f168201915b505050505090508051600014156107235760405162461bcd60e51b81526020600482015260166024820152751d985d5b1d081a5cc81b9bdd081cdd5c1c1bdc9d195960521b60448201526064016103c8565b60008260010180546107349061145f565b80601f01602080910402602001604051908101604052809291908181526020018280546107609061145f565b80156107ad5780601f10610782576101008083540402835291602001916107ad565b820191906000526020600020905b81548152906001019060200180831161079057829003601f168201915b505050505090508051600014156108065760405162461bcd60e51b815260206004820152601760248201527f696e76616c6964207661756c7420617267756d656e747300000000000000000060448201526064016103c8565b8181604051602001610819929190611393565b6040516020818303038152906040529150600033824360405160200161084193929190611354565b604051602081830303815290604052805190602001209050808351602085016000f59550853b61087057600080fd5b604051630b4988fd60e41b8152600481018890523360248201526001600160a01b03868116604483015287169063b4988fd090606401600060405180830381600087803b1580156108c057600080fd5b505af11580156108d4573d6000803e3d6000fd5b50506040516312b5ad0160e11b81526001600160a01b0389811660048301528816925063256b5a029150602401600060405180830381600087803b15801561091b57600080fd5b505af115801561092f573d6000803e3d6000fd5b50506040516001600160a01b03891681523392507f5d9c31ffa0fecffd7cf379989a3c7af252f0335e0d2a1320b55245912c781f53915060200160405180910390a25050505050919050565b6000546001600160a01b031633146109a55760405162461bcd60e51b81526004016103c8906113fa565b6040805160808101825260006060820181815282528251602081810185529181529082015260019181018290528154909190839081106109f557634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016000820151816000019080519060200190610a1f929190611199565b506020828101518051610a389260018501920190611199565b50604091909101516002909101805460ff191691151591909117905550565b6000546001600160a01b03163314610a815760405162461bcd60e51b81526004016103c8906113fa565b6005546001600160a01b0316610ac85760405162461bcd60e51b815260206004820152600c60248201526b656d7074794164647265737360a01b60448201526064016103c8565b6005546001600160a01b0382811691161415610b125760405162461bcd60e51b81526020600482015260096024820152681d5b98da185b99d95960ba1b60448201526064016103c8565b600580546001600160a01b0319166001600160a01b0383169081179091556040519081527f5cbd2d8f985b68b423222677a03215cddfa126e788663e1c0aaef679c5bcf2639060200160405180910390a150565b6000546001600160a01b03163314610b905760405162461bcd60e51b81526004016103c8906113fa565b600054600160a81b900460ff1680610bb25750600054600160a01b900460ff16155b610c155760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103c8565b600054600160a81b900460ff16158015610c3f576000805461ffff60a01b191661010160a01b1790555b600580546001600160a01b0319166001600160a01b0384161790558015610c6e576000805460ff60a81b191690555b5050565b6000546001600160a01b03163314610c9c5760405162461bcd60e51b81526004016103c8906113fa565b6040805160806020601f87018190040282018101909252606081018581526000928291908890889081908501838280828437600092019190915250505090825250604080516020601f87018190048102820181019092528581529181019190869086908190840183828082843760009201829052509385525050506020918201819052600180548082018255915282518051939450849360039092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60192610d6a92849290910190611199565b506020828101518051610d839260018501920190611199565b50604091909101516002909101805460ff19169115159190911790555050505050565b6000546001600160a01b03163314610dd05760405162461bcd60e51b81526004016103c8906113fa565b6001600160a01b038116610e355760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b336000908152600460205260408120546001600160a01b031615610eed5760405162461bcd60e51b815260206004820152601460248201527315985d5b1d081b585cdd195c88195e1a5cdd195960621b60448201526064016103c8565b600060026000018054610eff9061145f565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2b9061145f565b8015610f785780601f10610f4d57610100808354040283529160200191610f78565b820191906000526020600020905b815481529060010190602001808311610f5b57829003601f168201915b50505050509050805160001415610fd15760405162461bcd60e51b815260206004820152601d60248201527f7661756c74206d6173746572206973206e6f7420737570706f7274656400000060448201526064016103c8565b600060026001018054610fe39061145f565b80601f016020809104026020016040519081016040528092919081815260200182805461100f9061145f565b801561105c5780601f106110315761010080835404028352916020019161105c565b820191906000526020600020905b81548152906001019060200180831161103f57829003601f168201915b505050505090508181604051602001611076929190611393565b6040516020818303038152906040529150600033824360405160200161109e93929190611354565b604051602081830303815290604052805190602001209050808351602085016000f59350833b6110cd57600080fd5b60055460405163485cc95560e01b81523360048201526001600160a01b0391821660248201529085169063485cc95590604401600060405180830381600087803b15801561111a57600080fd5b505af115801561112e573d6000803e3d6000fd5b50503360008181526004602090815260409182902080546001600160a01b0319166001600160a01b038b1690811790915591519182529193507f6413b565d49b7d00d6a4f9d7af52060d79f0a408109715c16eb67bdf548a92e892500160405180910390a250505090565b8280546111a59061145f565b90600052602060002090601f0160209004810192826111c7576000855561120d565b82601f106111e057805160ff191683800117855561120d565b8280016001018555821561120d579182015b8281111561120d5782518255916020019190600101906111f2565b5061121992915061121d565b5090565b5b80821115611219576000815560010161121e565b60008083601f840112611243578182fd5b50813567ffffffffffffffff81111561125a578182fd5b60208301915083602082850101111561127257600080fd5b9250929050565b60006020828403121561128a578081fd5b81356001600160a01b03811681146112a0578182fd5b9392505050565b600080600080604085870312156112bc578283fd5b843567ffffffffffffffff808211156112d3578485fd5b6112df88838901611232565b909650945060208701359150808211156112f7578384fd5b5061130487828801611232565b95989497509550505050565b600060208284031215611321578081fd5b5035919050565b6000815180845261134081602086016020860161142f565b601f01601f19169290920160200192915050565b6bffffffffffffffffffffffff198460601b1681526000835161137e81601485016020880161142f565b60149201918201929092526034019392505050565b600083516113a581846020880161142f565b8351908301906113b981836020880161142f565b01949350505050565b6060815260006113d56060830186611328565b82810360208401526113e78186611328565b9150508215156040830152949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60005b8381101561144a578181015183820152602001611432565b83811115611459576000848401525b50505050565b600181811c9082168061147357607f821691505b6020821081141561149457634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200e9b9b883b83ead23c06cb72f94ffdac33a1f5dae916ec56d9bbe5f8f9a5a3e664736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/VaultFactoryV2.sol:VaultFactoryV2",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 115,
        "contract": "contracts/VaultFactoryV2.sol:VaultFactoryV2",
        "label": "_initialized",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 118,
        "contract": "contracts/VaultFactoryV2.sol:VaultFactoryV2",
        "label": "_initializing",
        "offset": 21,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1102,
        "contract": "contracts/VaultFactoryV2.sol:VaultFactoryV2",
        "label": "vaultTemplates",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(VaultTemplate)1093_storage)dyn_storage"
      },
      {
        "astId": 1105,
        "contract": "contracts/VaultFactoryV2.sol:VaultFactoryV2",
        "label": "vaultMasterTemplate",
        "offset": 0,
        "slot": "2",
        "type": "t_struct(VaultMasterTemplate)1098_storage"
      },
      {
        "astId": 1109,
        "contract": "contracts/VaultFactoryV2.sol:VaultFactoryV2",
        "label": "userVaultMasters",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 1111,
        "contract": "contracts/VaultFactoryV2.sol:VaultFactoryV2",
        "label": "routerRepository",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(VaultTemplate)1093_storage)dyn_storage": {
        "base": "t_struct(VaultTemplate)1093_storage",
        "encoding": "dynamic_array",
        "label": "struct VaultFactoryV2.VaultTemplate[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_struct(VaultMasterTemplate)1098_storage": {
        "encoding": "inplace",
        "label": "struct VaultFactoryV2.VaultMasterTemplate",
        "members": [
          {
            "astId": 1095,
            "contract": "contracts/VaultFactoryV2.sol:VaultFactoryV2",
            "label": "code",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes_storage"
          },
          {
            "astId": 1097,
            "contract": "contracts/VaultFactoryV2.sol:VaultFactoryV2",
            "label": "arguments",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(VaultTemplate)1093_storage": {
        "encoding": "inplace",
        "label": "struct VaultFactoryV2.VaultTemplate",
        "members": [
          {
            "astId": 1088,
            "contract": "contracts/VaultFactoryV2.sol:VaultFactoryV2",
            "label": "code",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes_storage"
          },
          {
            "astId": 1090,
            "contract": "contracts/VaultFactoryV2.sol:VaultFactoryV2",
            "label": "arguments",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes_storage"
          },
          {
            "astId": 1092,
            "contract": "contracts/VaultFactoryV2.sol:VaultFactoryV2",
            "label": "deprecated",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      }
    }
  }
}